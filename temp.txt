Python 3.9.5


@app.route('/get_response', methods=['POST'])
def get_response():
    user_message = request.json.get("message", "")

    # Store user message in DB
    try:
        cursor = conn.cursor()
        cursor.execute("INSERT INTO enquiries (user_message) VALUES (%s)", (user_message,))
        conn.commit()
        cursor.close()
    except Exception as db_error:
        print("Database error:", db_error)

    # Construct Gemini prompt (no currency or location)
    prompt = f"""
You are a smart AI shopping assistant.
The user can ask about any product: electronics, clothes, accessories, home appliances, sports gear, etc.
Provide 2–3 actual product names with approximate prices.
Always display prices only in Indian rupees (₹). Do not use any other currency.
Keep it neat and user-friendly.
Format each line like: Product Name - Price

User Query: {user_message}
"""


    try:
        # Generate product names and prices using Gemini
        response = model.generate_content(prompt)
        reply_text = response.text if hasattr(response, "text") else "Sorry, I couldn’t process that right now."

        lines = reply_text.split("\n")
        reply_with_links = []

        for line in lines:
            if '-' in line:
                product_name = line.split('-')[0].strip()
                price = line.split('-')[1].strip()
                search_query = urllib.parse.quote_plus(product_name)

                amazon_link = f"https://www.amazon.in/s?k={search_query}"
                flipkart_link = f"https://www.flipkart.com/search?q={search_query}"

                reply_with_links.append(
                    f"<b><u><a href='{amazon_link}' target='_blank'>Amazon: {product_name}</a></u></b> / "
                    f"<b><u><a href='{flipkart_link}' target='_blank'>Flipkart: {product_name}</a></u></b> - {price}"
                )
            else:
                reply_with_links.append(line)

        reply_html = "<br>".join(reply_with_links)
        return jsonify({"reply": reply_html})

    except Exception as e:
        return jsonify({"reply": f"⚠️ Error: {str(e)}"})